<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utilities="clr-namespace:TCMS.GUI.Utilities">

    <Style x:Key="BtnStyle"
           TargetType="RadioButton">

        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0,5,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border"
                            Height="50"
                            Width="228"
                            BorderThickness="0">

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                             Color="#272B2F" />
                        </Border.Background>

                        <Grid>

                            <Border x:Name="Indicator"
                                    Height="35"
                                    Width="4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="#FFFFFF"
                                    Visibility="Collapsed"
                                    CornerRadius="2" />

                            <ContentPresenter />

                        </Grid>
                        
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />

                        </Trigger>

                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                      SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#272B2F"
                                                    To="#3E434A"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                            
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                      SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#3E434A"
                                                    To="#272B2F"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                            
                        </EventTrigger>

                        <Trigger Property="IsChecked"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#212529" />

                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />

                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="DynamicWidthBtnStyle" TargetType="{x:Type utilities:Btn}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Background" Value="#272B2F"/>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type utilities:Btn}">
                    <Border x:Name="border"
                            Height="50"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Stretch">
                            <Border x:Name="Indicator"
                                    Height="35"
                                    Width="4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="#FFFFFF"
                                    Visibility="Collapsed"
                                    CornerRadius="2"/>
                            <ContentPresenter HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="border" Property="Background" Value="#3E434A"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#212529"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemedTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderBrush" Value="#FF464E54"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="#FF31363B" Margin="2">
                        <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"
                                      Margin="12,2,12,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#64686b"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#64686b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FF3A3F44"/>
                <!-- This will not work because the Background is now part of the ControlTemplate -->
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF394146"/>
                <!-- This will not work either for the same reason -->
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RoundCornerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#444" />
        <Setter Property="BorderBrush" Value="#444" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="20"
                            Padding="{TemplateBinding Padding}">
                        <!-- Apply Padding to the Border -->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#555"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#333"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemedButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF31363B"/>
        <!-- Slightly lighter than the panel's color -->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF464E54"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <!-- Additional setters for hover effects and other properties can be added here -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF394146"/>
                <!-- Slightly lighter for hover effect -->
            </Trigger>
        </Style.Triggers>
    </Style>



    <ImageBrush x:Key="close_app_def"
                ImageSource="pack://application:,,,/Assets/Images/shutdown_def.png"
                Stretch="None" />

    <ImageBrush x:Key="close_app_mo"
                ImageSource="pack://application:,,,/Assets/Images/shutdown_mo.png"
                Stretch="None" />


    <Style x:Key="ExitApp"
           TargetType="{x:Type Button}">

        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Margin"
                Value="0,15,15,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource close_app_def}">

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    
</ResourceDictionary>